#ifndef	SP_FRONT2_IO_PAT_H
#define	SP_FRONT2_IO_PAT_H

//////////////////////////////////////////
//SAVENET I/O折り返しパターンテーブル

#define	FRONT_TEST_PATTERN_NUM		(19)
// DIO折り返しテスト
DIO_AUTO_TEST_TABLE		m_wFront2TestPattern[FRONT_TEST_PATTERN_NUM]={
	//パターン0 (CN21〜CN24入力テスト)
	{ADR_DO_50, SP_XXXX_SW1_START_ADR+0, 16,		//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	15, 7,14, 6,13, 5,12, 4,11, 3,10, 2, 9, 1, 8, 0,	//出力ビットのパターン
	 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15},	//入力ビットのパターン

	//パターン1 (CN25〜CN26入力テスト)
	{ADR_DO_51, SP_XXXX_SW1_START_ADR+1, 8,			//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	15, 7,14, 6,13, 5,12, 4, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	 0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	//パターン2 (CN31入力テスト)
	{ADR_DO_52, SP_XXXX_SW1_START_ADR+1,  7,		//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	13,12, 4,11, 3,10, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	 8, 9,10,11,12,13,14, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	//パターン3 (CN51 IN4_e入力テスト)
	{ADR_DO_54, SP_XXXX_SW1_START_ADR+3, 1,			//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	//パターン4 (CN52 IN5_e入力テスト)
	{ADR_DO_54, SP_XXXX_SW1_START_ADR+4, 1,			//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	//パターン5 (CN71 IN6_e,f入力テスト)
	{ADR_DO_54, SP_XXXX_SW1_START_ADR+5, 2,			//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	13, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	14,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	//パターン6 (CN71 IN7_e,f入力テスト)
	{ADR_DO_54, SP_XXXX_SW1_START_ADR+6, 2,			//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	12, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	14,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	 //パターン7 (CN11〜13 → CN10 IL1〜8, a, DOG, LSP. LSNインターロック信号テスト)
	{ADR_DO_49, ADR_DI_48, 12,						//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	15, 7,14, 6,13, 5,12, 4,11, 3,10, 2, 0, 0, 0, 0,	//出力ビットのパターン
	 7,14, 6,13, 5,12, 4,11,10, 1, 8, 0, 0, 0, 0, 0},	//入力ビットのパターン

	 //パターン8 (CN32-A2,B2入力テスト)
	{ADR_DO_52, ADR_DI_53, 2,						//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	13, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	15, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	 //パターン9 (CN10 IL9 インターロック信号テスト)
	{ADR_DO_52, ADR_DI_48, 1,						//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	 //パターン10 (CN33入力テスト)
	{SP_XXXX_SW1_START_ADR+1, ADR_DI_53, 4,			//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	12, 4,11, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	//パターン11 (CN27-A入力テスト)
	{ADR_DO_51, SP_XXXX_SW1_START_ADR+1, 1,			//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	//パターン12 (CN27-B入力テスト)
	{ADR_DO_51, SP_XXXX_SW1_START_ADR+3, 1,			//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	//パターン13 (CN27-C入力テスト)
	{ADR_DO_51, SP_XXXX_SW1_START_ADR+4, 1,			//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	//パターン14 (CN10 IL0入力テスト)
	{ADR_DO_54, ADR_DI_48, 1,						//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	//パターン15 (CN41 OUT3出力テスト)
	{SP_XXXX_SW1_START_ADR+2, ADR_DI_56, 12,		//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11, 0, 0, 0, 0,	//出力ビットのパターン
	15, 7,14, 6,13, 5,12, 4,11, 3,10, 2, 0, 0, 0, 0},	//入力ビットのパターン

	//パターン16 (CN42 OUT3出力テスト)
	{SP_XXXX_SW1_START_ADR+2, ADR_DI_57, 12,		//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11, 0, 0, 0, 0,	//出力ビットのパターン
	15, 7,14, 6,13, 5,12, 4,11, 3,10, 2, 0, 0, 0, 0},	//入力ビットのパターン

	//パターン17 (CN41,CN42 IN3入力テスト)
	{ADR_DO_58, SP_XXXX_SW1_START_ADR+2, 16,		//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,	//出力ビットのパターン
	15,13,11, 9, 7, 5, 3, 1,14,12,10, 8, 6, 4, 2, 0},	//入力ビットのパターン

	//パターン18 (CN61 OUT1出力テスト)
	{SP_XXXX_SW1_START_ADR+0, ADR_DI_55, 16,		//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,	//出力ビットのパターン
	 0, 8, 1, 9, 2,10, 3,11, 4,12, 5,13, 6,14, 7,15},	//入力ビットのパターン
};

#endif	SP_FRONT2_IO_PAT_H
