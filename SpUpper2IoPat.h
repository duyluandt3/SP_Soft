#ifndef	SP_UPPER2_IO_PAT_H
#define	SP_UPPER2_IO_PAT_H

//////////////////////////////////////////
//SAVENET I/O折り返しパターンテーブル

#define	UPPER2_TEST_PATTERN_NUM		(12)
// DIO折り返しテスト
DIO_AUTO_TEST_TABLE		m_wUpper2TestPattern[UPPER2_TEST_PATTERN_NUM]={
	//パターン0 (CN21〜CN24入力テスト)
	{ADR_DO_50, SP_XXXX_SW1_START_ADR+0, 16,		//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	15, 7,14, 6,13, 5,12, 4,11, 3,10, 2, 9, 1, 8, 0,	//出力ビットのパターン
	 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15},	//入力ビットのパターン

	//パターン1 (CN25〜CN28入力テスト)
	{ADR_DO_51, SP_XXXX_SW1_START_ADR+1, 16,		//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	15, 7,14, 6,13, 5,12, 4,11, 3,10, 2, 9, 1, 8, 0,	//出力ビットのパターン
	 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15},	//入力ビットのパターン

	 //パターン2 (CN31〜CN32 IN3入力テスト)
	{ADR_DO_52, SP_XXXX_SW1_START_ADR+2, 12,		//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	15, 7,14, 6,13, 5,12, 4,11, 3,10, 2, 0, 0, 0, 0,	//出力ビットのパターン
	 0, 1, 2, 3, 4,10, 5, 6, 7,11,12,13, 0, 0, 0, 0},	//入力ビットのパターン
	 
	//パターン3 (CN51 IN4入力テスト)
	{ADR_DO_54, SP_XXXX_SW1_START_ADR+3, 2,			//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	15, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	14,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	//パターン4 (CN71 IN3入力テスト)
	{ADR_DO_54, SP_XXXX_SW1_START_ADR+2, 2,			//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	14, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	14,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	//パターン5 (CN71 IN5入力テスト)
	{ADR_DO_54, SP_XXXX_SW1_START_ADR+4, 2,			//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	13, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	14,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	//パターン6 (CN71 IN6入力テスト)
	{ADR_DO_54, SP_XXXX_SW1_START_ADR+5, 2,			//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	12, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	14,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	 //パターン7 (CN10 → CN11〜14, 64 インターロック信号テスト)
	{ADR_DO_49, ADR_DI_48, 14,						//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	 1, 2, 3, 4, 5, 6, 7, 9,10,11,12,13,14,15, 0, 0,	//出力ビットのパターン
	 1, 2, 3, 4, 5, 6, 7, 9,10,11,12,13,14,15, 0, 0},	//入力ビットのパターン

	 //パターン8 (CN33, CN34, CN36入力テスト)
	{ADR_DO_52, ADR_DI_53, 4,						//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	13, 5, 9, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	15, 7,14, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	 //パターン9 (OUT3_0〜7 出力テスト)
	{SP_XXXX_SW1_START_ADR+2, ADR_DI_55, 8,			//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	 0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	15, 7,14, 6,13, 5,12, 4, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	 //パターン10 (FFU STOP_a, STOP_b CN41→CN10インターロック信号テスト)
	{ADR_DO_54, ADR_DI_48, 2,						//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	11,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン

	 //パターン11 (IN3_9 入力テスト)
	{ADR_DO_54, SP_XXXX_SW1_START_ADR+2, 1,			//出力Adr, 入力Adr, 確認ビット数(最大16bit)
	 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,	//出力ビットのパターン
	 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	//入力ビットのパターン
};


#endif	SP_UPPER2_IO_PAT_H
