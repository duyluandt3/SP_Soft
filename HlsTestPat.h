#ifndef	HLS_TEST_PAT_H
#define	HLS_TEST_PAT_H

//////////////////////////////////////////
//HLS通信テストパターンテーブル
#define	TEST_TERM_END	43	//44以降は検査機内部のSAVENETモジュールに割り当て可能とする
#define COM_CHK_TIME	100
typedef struct{
	DWORD	dwChkDurMsec;
	int	nSwTestCode[8];	 	//0:非通信をチェック, 1>:DSWの設定値(1,3がONならば5, 2,4がONならば10)
	int	nComStartAdr[8];
	int	nComEndAdr[8];
}HLS_CHK_PATTERN;

#define	HLS_CHK_PATTERN_UPPER_NUM		(11)
HLS_CHK_PATTERN	m_HlsTestUpper[HLS_CHK_PATTERN_UPPER_NUM]={
//	  SW1   SW2   SW3   SW4   SW5   SW6   SW7   SW8	
	//全てOFF
	{   500,
		0,    0,    0,   -1,   -1,   -1,   -1,   -1,
	    4,    4,    4,   -1,   -1,   -1,   -1,   -1,
	   TEST_TERM_END,   TEST_TERM_END,   TEST_TERM_END,   -1,   -1,   -1,   -1,   -1},
	//SW1=1(Adr4-7),SW2=2(Adr8-11),SW3=12(Adr12)
	{   2000,
	    1,    2,   12,   -1,   -1,   -1,   -1,   -1,
	    4,    8,   12,   -1,   -1,   -1,   -1,   -1,
	    7,   11,   12,   -1,   -1,   -1,   -1,   -1},

	//ここでNET2に切り替わる

	//SW1=5(Adr20-23),SW2=0(Adr0-3),SW3=0(Adr0)
	{	1500,
		5,    0,    0,				-1,   -1,   -1,   -1,   -1,	//SW=5: Adr20〜23
		20,   4,   24,				-1,   -1,   -1,   -1,   -1,
		23,   19,  TEST_TERM_END,	-1,   -1,   -1,   -1,   -1},
	//SW1=10(Adr40-43),SW2=0(Adr0-3),SW3=0(Adr0)
	{   1500,
		10,				0,    0,   -1,   -1,   -1,   -1,   -1,	//SW=10: Adr40〜43
		40,				4,    4,   -1,   -1,   -1,   -1,   -1,
		TEST_TERM_END,	39,   39,   -1,   -1,   -1,   -1,   -1},
	//全てOFF
	{   500,
	    0,				0,				0,				-1,   -1,   -1,   -1,   -1,
	    4,				4,				4,				-1,   -1,   -1,   -1,   -1,
		TEST_TERM_END,	TEST_TERM_END,	TEST_TERM_END,	-1,   -1,   -1,   -1,   -1},
	//SW1=0(Adr0-3),SW2=5(Adr20-23),SW3=0(Adr0)
	{   1500,
	    0,    5,    0,				-1,   -1,   -1,   -1,   -1,
	    4,   20,   24,				-1,   -1,   -1,   -1,   -1,
	   19,   23,   TEST_TERM_END,	-1,   -1,   -1,   -1,   -1},
	//SW1=0(Adr0-3),SW2=10(Adr40-43),SW3=0(Adr0)
	{   1500,
	    0,   10,			0,   -1,   -1,   -1,   -1,   -1,
	    4,   40,			4,   -1,   -1,   -1,   -1,   -1,
	   39,   TEST_TERM_END,	39,   -1,   -1,   -1,   -1,   -1},
	//全てOFF
	{   500,
	    0,				0,				0,				-1,   -1,   -1,   -1,   -1,
	    4,				4,				4,				-1,   -1,   -1,   -1,   -1,
		TEST_TERM_END,	TEST_TERM_END,	TEST_TERM_END,	-1,   -1,   -1,   -1,   -1},
	//SW1=0(Adr0-3),SW2=0(Adr0-3),SW3=21(Adr21)
	{   1500,
	    0,    0,			21,   -1,   -1,   -1,   -1,   -1,
	    4,   22,			21,   -1,   -1,   -1,   -1,   -1,
		20,   TEST_TERM_END,	21,   -1,   -1,   -1,   -1,   -1},
	//SW1=0(Adr0-3),SW2=0(Adr0-3),SW3=42(Adr42)
	{   1500,
	    0,    0,			42,   -1,   -1,   -1,   -1,   -1,
	    4,    TEST_TERM_END,42,   -1,   -1,   -1,   -1,   -1,
		41,   TEST_TERM_END,42,   -1,   -1,   -1,   -1,   -1},
	//全てOFF
	{   500,
		0,				0,				0,				-1,   -1,   -1,   -1,   -1,
	    4,				4,				4,				-1,   -1,   -1,   -1,   -1,
	   TEST_TERM_END,   TEST_TERM_END,  TEST_TERM_END,	-1,   -1,   -1,   -1,   -1},
};

#define	HLS_CHK_PATTERN_FRONT_NUM		(8)
HLS_CHK_PATTERN	m_HlsTestFront[HLS_CHK_PATTERN_FRONT_NUM]={
//	  SW1   SW2   SW3   SW4   SW5   SW6   SW7   SW8	
	//全てOFF
	{   500,
		0,				0,				-1,   -1,   -1,   -1,   -1,   -1,
	    4,				4,				-1,   -1,   -1,   -1,   -1,   -1,
	   TEST_TERM_END,	TEST_TERM_END,	-1,   -1,   -1,   -1,   -1,   -1},
	//SW1=1(Adr4-7),SW2=2(Adr8-10)
	{   2000,
	    1,    2,   -1,				-1,   -1,   -1,   -1,   -1,
	    4,    8,   11,				-1,   -1,   -1,   -1,   -1,
	    7,   10,   TEST_TERM_END,	-1,   -1,   -1,   -1,   -1},

	//ここでNET2に切り替わる

	//SW1=5(Adr20-23),SW2=0(Adr0-3)
	{   1500,
	    5,    0,   -1,				-1,   -1,   -1,   -1,   -1,
	   20,    4,   24,				-1,   -1,   -1,   -1,   -1,
	   23,   19,   TEST_TERM_END,	-1,   -1,   -1,   -1,   -1},
	//SW1=10(Adr40-43),SW2=0(Adr0-2)
	{   1500,
	   10,				0,   -1,   -1,   -1,   -1,   -1,   -1,
	   40,				4,   -1,   -1,   -1,   -1,   -1,   -1,
	   TEST_TERM_END,	39,   -1,   -1,   -1,   -1,   -1,   -1},
	//全てOFF
	{   500,
	    0,				0,   -1,   -1,   -1,   -1,   -1,   -1,
	    4,				4,   -1,   -1,   -1,   -1,   -1,   -1,
	   TEST_TERM_END,   TEST_TERM_END,   -1,   -1,   -1,   -1,   -1,   -1},
	//SW1=0(Adr0-3),SW2=5(Adr20-22)
	{   1500,
	    0,    5,   -1,				-1,   -1,   -1,   -1,   -1,
	    4,   20,   23,				-1,   -1,   -1,   -1,   -1,
	   19,   22,   TEST_TERM_END,	-1,   -1,   -1,   -1,   -1},
	//SW1=0(Adr0-3),SW2=10(Adr40-42)
	{   1500,
	    0,   10,   -1,				-1,   -1,   -1,   -1,   -1,
	    4,   40,   TEST_TERM_END,	-1,   -1,   -1,   -1,   -1,
	   39,   42,   TEST_TERM_END,	-1,   -1,   -1,   -1,   -1},
	//全てOFF
	{   500,
	    0,				0,   -1,   -1,   -1,   -1,   -1,   -1,
	    4,				4,   -1,   -1,   -1,   -1,   -1,   -1,
	   TEST_TERM_END,   TEST_TERM_END,   -1,   -1,   -1,   -1,   -1,   -1},
};

#define	HLS_CHK_PATTERN_MOTHER_NUM		(8)
HLS_CHK_PATTERN	m_HlsTestMother[HLS_CHK_PATTERN_MOTHER_NUM]={
//	  SW1   SW2   SW3   SW4   SW5   SW6   SW7   SW8	
	//全てOFF
	{ 500,
		0,				0,				-1,   -1,   -1,   -1,   -1,   -1,
	    4,				4,				-1,   -1,   -1,   -1,   -1,   -1,
		TEST_TERM_END,	TEST_TERM_END,	-1,   -1,   -1,   -1,   -1,   -1},
	//SW1=1(Adr4-7),SW2=2(Adr8-10)
	{   2000,
	    1,    2,   -1,   -1,   -1,   -1,   -1,   -1,
	    4,    8,   -1,   -1,   -1,   -1,   -1,   -1,
	    7,   10,   -1,   -1,   -1,   -1,   -1,   -1},

	//ここでNET2に切り替わる

	//SW1=5(Adr20-23),SW2=0(Adr0-2)
	{1500,
	    5,    0,   -1,   -1,   -1,   -1,   -1,   -1,
	   20,    4,   -1,   -1,   -1,   -1,   -1,   -1,
	   23,   19,   -1,   -1,   -1,   -1,   -1,   -1},
	//SW1=10(Adr40-43),SW2=0(Adr0-2)
	{1500,
	   10,    0,   -1,   -1,   -1,   -1,   -1,   -1,
	   40,    4,   -1,   -1,   -1,   -1,   -1,   -1,
	   43,   39,   -1,   -1,   -1,   -1,   -1,   -1},
	//全てOFF
	{ 500,
		0,				0,				-1,   -1,   -1,   -1,   -1,   -1,
	    4,				4,				-1,   -1,   -1,   -1,   -1,   -1,
		TEST_TERM_END,	TEST_TERM_END,	-1,   -1,   -1,   -1,   -1,   -1},
	//SW1=0(Adr0-3),SW2=5(Adr20-22)
	{1500,
	    0,    5,   -1,   -1,   -1,   -1,   -1,   -1,
	    4,   20,   -1,   -1,   -1,   -1,   -1,   -1,
	   19,   22,   -1,   -1,   -1,   -1,   -1,   -1},
	//SW1=0(Adr0-3),SW2=10(Adr40-42)
	{1500,
	    0,   10,   -1,   -1,   -1,   -1,   -1,   -1,
	    4,   40,   -1,   -1,   -1,   -1,   -1,   -1,
	   39,   42,   -1,   -1,   -1,   -1,   -1,   -1},
	//全てOFF
	{ 500,
		0,				0,				-1,   -1,   -1,   -1,   -1,   -1,
	    4,				4,				-1,   -1,   -1,   -1,   -1,   -1,
		TEST_TERM_END,	TEST_TERM_END,	-1,   -1,   -1,   -1,   -1,   -1},
};



#endif	HLS_TEST_PAT_H
